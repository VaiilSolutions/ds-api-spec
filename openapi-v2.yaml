openapi: 3.1.0
info:
  title: Default Sleuth API
  description: API Specification for the Default Sleuth project
  version: 1.0.0

servers:
  - url: https://tleqd94bfd.execute-api.us-east-1.amazonaws.com/dev/v2
    description: Dev API


security:
  - cognitoAuth: [email, openid]

paths:
  /dashboard:
    get:
      summary: Dashboard data
      security:
        - cognitoAuth: []
      responses:
        '200':
          description: Returns dashboard data
          content:
            application/json:
              schema:
                $ref: './schemas/v2/dashboard/responses/get_dashboard.schema.json'
        '401':
          description: Unauthorized
  /users:
    get:
      summary: Get users
      security:
        - cognitoAuth: []
      responses:
        '200':
          description: All organization users
          content:
            application/json:
              schema:
                $ref: './schemas/v2/users/responses/get_users.schema.json'
        '401':
          description: Unauthorized
    post:
      summary: Create user
      security:
        - cognitoAuth: []
      requestBody:
        description: For testing purposes, please end the user email with **@default-sleuth.test.com** to prevent excess Cognito emails from being sent.
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/v2/users/requests/post_user.schema.json'
            example:
              name: Test Admin
              role_id: 1
              email: testuser@default-sleuth.test.com
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: './schemas/v2/users/responses/post_user.schema.json'
        '401':
          description: Unauthorized
  /users/{user_id}:
    delete:
      summary: Delete user
      security:
        - cognitoAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        '200':
          description: User deletion confirmation
          content:
            application/json:
              schema:
                $ref: './schemas/v2/users/responses/delete_user.schema.json'
        '401':
          description: Unauthorized
  /members/{member_id}:
    get:
      summary: Get member by ID
      security:
        - cognitoAuth: []
      parameters:
        - name: member_id
          in: path
          required: true
          description: The member (internal) ID
          schema:
            type: string
      responses:
        '200':
          description: Member info
          content:
            application/json:
              schema:
                $ref: './schemas/v2/members/responses/get_member.schema.json'
        '401':
          description: Unauthorized
  /loans:
    get:
      summary: Get loan queue data
      security:
        - cognitoAuth: []
      responses:
        '200':
          description: Returns loan queue data
          content:
            application/json:
              schema:
                $ref: './schemas/v2/loans/responses/get_loans.schema.json'
        '401':
          description: Unauthorized
  /loans/{account_id}:
    patch:
      summary: Modify loan ds_status/promise_date/modification_date
      security:
        - cognitoAuth: []
      parameters:
        - name: account_id
          in: path
          required: true
          description: The loan (internal) ID
          schema:
            type: integer
      responses:
        '200':
          description: Updated loan data
          content: 
            application/json:
              schema:
                $ref: './schemas/v2/loans/responses/patch_loan.schema.json'
  /loans/{account_id}/contact_history:
    post:
      summary: Create contact history entry
      security:
        - cognitoAuth: []
      parameters:
        - name: account_id
          in: path
          required: true
          description: The loan (internal) ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/v2/contact_history/requests/post_contact_history.schema.json'
            example:
              contact_type: Phone Call
              notes: Discussed payment plan options
              status: Completed
      responses:
        '200':
          description: 'Contact history entry'
          content:
            application/json:
              schema:
                $ref: './schemas/v2/contact_history/responses/post_contact_history.schema.json'
        '401':
          description: Unauthorized

components:
  securitySchemes:
    cognitoAuth:
      type: oauth2
      x-tokenName: id_token
      flows:
        authorizationCode:
          authorizationUrl: https://us-east-1mlmm6zjt7.auth.us-east-1.amazoncognito.com/oauth2/authorize
          tokenUrl: https://us-east-1mlmm6zjt7.auth.us-east-1.amazoncognito.com/oauth2/token
          scopes:
            email: "Access to the user's email"
            openid: "Grants access to the openid scope"
